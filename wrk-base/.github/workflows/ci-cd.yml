name: CI/CD Pipeline

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main, dev]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies - wrk-base
        run: |
          cd wrk-base
          npm install

      - name: Install dependencies - tpl-wrk-thing
        run: |
          cd tpl-wrk-thing
          npm install

      - name: Install dependencies - app-node
        run: |
          cd app-node
          npm install

      - name: Install dependencies - wrk-ork
        run: |
          cd wrk-ork
          npm install

      - name: Install dependencies - wrk-book
        run: |
          cd wrk-book
          npm install

      - name: Lint - wrk-base
        run: |
          cd wrk-base
          npm run lint

      - name: Lint - tpl-wrk-thing
        run: |
          cd tpl-wrk-thing
          npm run lint

      - name: Lint - app-node
        run: |
          cd app-node
          npm run lint

      - name: Lint - wrk-ork
        run: |
          cd wrk-ork
          npm run lint

      - name: Lint - wrk-book
        run: |
          cd wrk-book
          npm run lint

  build-and-push:
    name: Build and Push Docker Images
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [app-node, wrk-ork, wrk-book]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate image tags
        id: meta
        run: |
          SERVICE="${{ matrix.service }}"
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          BASE_NAME="${{ env.REGISTRY }}/${REPO_NAME}/${SERVICE}"
          
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            TAGS="${BASE_NAME}:latest,${BASE_NAME}:${{ github.sha }}"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            TAGS="${BASE_NAME}:development,${BASE_NAME}:dev-${{ github.sha }}"
          else
            TAGS="${BASE_NAME}:alpha-${{ github.sha }}"
          fi
          
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "Generated tags: ${TAGS}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max