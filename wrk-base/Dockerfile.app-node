# Multi-stage build for app-node service
FROM node:18-slim AS builder

# Install git and build tools for git-based dependencies and native modules
RUN apt-get update && apt-get install -y \
    git \
    build-essential \
    python3 \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy all package.json files for dependency resolution
COPY wrk-base/package*.json ./wrk-base/
COPY tpl-wrk-thing/package*.json ./tpl-wrk-thing/
COPY app-node/package*.json ./app-node/

# Install dependencies for wrk-base first
WORKDIR /app/wrk-base
RUN npm install --only=production && npm rebuild

# Install dependencies for tpl-wrk-thing
WORKDIR /app/tpl-wrk-thing
RUN npm install --only=production

# Install dependencies for app-node
WORKDIR /app/app-node
RUN npm install --only=production

# Production stage
FROM node:18-slim AS production

# Install curl for health checks, build tools for native modules and create non-root user
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    python3 \
    && rm -rf /var/lib/apt/lists/* && \
    groupadd --gid 1001 nodejs && \
    useradd --uid 1001 --gid nodejs --shell /bin/bash --create-home nodeuser

# Set working directory
WORKDIR /app

# Copy built dependencies and applications
COPY --from=builder /app/wrk-base ./wrk-base/
COPY --from=builder /app/tpl-wrk-thing ./tpl-wrk-thing/
COPY --from=builder /app/app-node/node_modules ./app-node/node_modules/

# Copy application code
COPY wrk-base/ ./wrk-base/
COPY tpl-wrk-thing/ ./tpl-wrk-thing/
COPY app-node/ ./app-node/

# Rebuild native modules in production environment
WORKDIR /app/wrk-base
RUN npm rebuild

# Install and rebuild tpl-wrk-thing dependencies if package.json exists
WORKDIR /app/tpl-wrk-thing
RUN [ -f package.json ] && npm install --only=production && npm rebuild || true

# Set working directory to app-node
WORKDIR /app/app-node

# Set up configuration
RUN chmod +x ./setup-config.sh && \
    ./setup-config.sh

# Copy and set up entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Create directories and set ownership
RUN mkdir -p config db && \
    chown -R nodeuser:nodejs /app && \
    chown nodeuser:nodejs /usr/local/bin/entrypoint.sh

# Switch to non-root user
USER nodeuser

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "require('net').connect(3000, 'localhost').on('connect', () => process.exit(0)).on('error', () => process.exit(1))"

# Use entrypoint script
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["wrk-node-http"]