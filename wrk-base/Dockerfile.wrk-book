# Multi-stage build for wrk-book service
FROM node:18-slim AS builder

# Install git and build tools for git-based dependencies and native modules
RUN apt-get update && apt-get install -y \
    git \
    build-essential \
    python3 \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy all package.json files for dependency resolution
COPY wrk-base/package*.json ./wrk-base/
COPY tpl-wrk-thing/package*.json ./tpl-wrk-thing/
COPY wrk-book/package*.json ./wrk-book/

# Install dependencies for wrk-base first
WORKDIR /app/wrk-base
RUN npm install --only=production && npm rebuild

# Install dependencies for tpl-wrk-thing (as per SETUP.md)
WORKDIR /app/tpl-wrk-thing
RUN npm install --only=production

# Install dependencies for wrk-book
WORKDIR /app/wrk-book
RUN npm install --only=production

# Production stage
FROM node:18-slim AS production

# Install required runtime dependencies for native modules
RUN apt-get update && apt-get install -y \
    build-essential \
    python3 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd --gid 1001 nodejs && \
    useradd --uid 1001 --gid nodejs --shell /bin/bash --create-home nodeuser

# Set working directory
WORKDIR /app

# Copy built dependencies and applications
COPY --from=builder /app/wrk-base ./wrk-base/
COPY --from=builder /app/tpl-wrk-thing ./tpl-wrk-thing/
COPY --from=builder /app/wrk-book/node_modules ./wrk-book/node_modules/

# Copy application code
COPY wrk-base/ ./wrk-base/
COPY tpl-wrk-thing/ ./tpl-wrk-thing/
COPY wrk-book/ ./wrk-book/

# Rebuild native modules in production environment
WORKDIR /app/wrk-base
RUN npm rebuild

# Install and rebuild tpl-wrk-thing dependencies if package.json exists
WORKDIR /app/tpl-wrk-thing
RUN [ -f package.json ] && npm install --only=production && npm rebuild || true

# Set working directory to wrk-book
WORKDIR /app/wrk-book

# Set up configuration
RUN chmod +x ./setup-config.sh && \
    ./setup-config.sh

# Copy and set up entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Create directories and set ownership
RUN mkdir -p config && \
    chown -R nodeuser:nodejs /app && \
    chown nodeuser:nodejs /usr/local/bin/entrypoint.sh

# Switch to non-root user
USER nodeuser

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "process.exit(0)"

# Use entrypoint script
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["wrk-book-rack"]